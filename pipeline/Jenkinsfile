pipeline {
    agent none
    stages {
        stage('Clone') {
            agent any
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/rondondaniel/python-jenkins-pipeline.git']])
            }
        }
        stage('Build') {
            agent {
                docker {
                    image 'python:3.8-alpine3.16'
                }
            }
            steps {
                sh 'python3.8 -m py_compile pipeline/src/prog.py pipeline/src/calc.py'
                stash(name: 'compiled-results', includes: 'pipeline/src/*.py*')
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'grihabor/pytest'
                }
            }
            steps {
                sh 'pytest -v --junit-xml test-reports/results.xml pipeline/src/test_calc.py'
            }
            post {
                always {
                    junit "test-reports/results.xml"
                }
            }
        }
        stage('Push Docker Image') {
            agent any
            environment {
                DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')
                IMAGE_NAME = 'dronemodel/calculator:latest'
            }
            steps {
                script {
                    sh 'docker build -t $IMAGE_NAME pipeline/src'
                    sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                    sh 'docker push $IMAGE_NAME'
                }
            }
        }
    }
}
